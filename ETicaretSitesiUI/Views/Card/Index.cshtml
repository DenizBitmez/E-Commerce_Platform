@using ETicaretData.ViewModels
@model IEnumerable<CardItem>
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Sepet</h1>
<hr />
<div id="chatIcon" title="Sohbet Başlat">💬</div>

@if (Model == null || !Model.Any())
{
    <div class="alert alert-danger" role="alert">
        Sepetiniz Boş
    </div>
}
else
{
    <table class="table table-bordered table-striped">
        <thead>
            <tr>
                <th>Product Name</th>
                <th>Product Price</th>
                <th>Quantity</th>
                <th>Total</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@item.Product.Name</td>
                    <td>@item.Product.Price.ToString("c")</td>
                    <td>@item.Quantity</td>
                    <td>@((item.Product.Price * item.Quantity).ToString("c"))</td>
                    <td>
                        <a class="btn btn-danger" asp-action="Remove" asp-route-id="@item.Product.Id">Remove</a>
                    </td>
                </tr>
            }
        </tbody>
        <tfoot>
            <tr>
                <td colspan="3">Total Price</td>
                <td>@ViewBag.Total</td>
            </tr>
        </tfoot>
    </table>
}

<div class="shopping-actions">
    <a asp-action="List" asp-controller="Home" class="continue-shopping">
        <i class="fas fa-arrow-left"></i> Alışverişe Devam Et
    </a>
    <a asp-action="CheckOut" asp-controller="Card" class="checkout">
        Alışverişi Tamamla <i class="fas fa-arrow-right"></i>
    </a>
</div>

<style>
    .shopping-actions {
        margin: 20px 0;
        padding: 15px;
        background-color: #f8f9fa;
        border-radius: 8px;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    }

        .shopping-actions a {
            padding: 10px 25px;
            border-radius: 5px;
            text-decoration: none;
            font-weight: 500;
            transition: all 0.3s ease;
            display: inline-flex;
            align-items: center;
            gap: 8px;
        }

    .continue-shopping {
        background-color: #6c757d;
        color: white;
    }

        .continue-shopping:hover {
            background-color: #5a6268;
            color: white;
            transform: translateY(-2px);
        }

    .checkout {
        background-color: #28a745;
        color: white;
    }

        .checkout:hover {
            background-color: #218838;
            color: white;
            transform: translateY(-2px);
        }

        .continue-shopping i,
        .checkout i {
            font-size: 1.1em;
        }

    #chatIcon {
        position: fixed;
        bottom: 25px;
        right: 25px;
        background-color: red;
        color: white;
        border-radius: 50%;
        width: 60px;
        height: 60px;
        font-size: 30px;
        text-align: center;
        line-height: 60px;
        cursor: pointer;
        z-index: 99999;
        display: block !important;
        visibility: visible !important;
        opacity: 1 !important;
    }

    #chatWindow {
        display: none;
        position: fixed;
        bottom: 90px;
        right: 25px;
        width: 350px;
        height: 500px;
        background-color: white;
        border: 1px solid #ccc;
        box-shadow: 0 4px 10px rgba(0,0,0,0.1);
        border-radius: 8px;
        z-index: 10000
</style>

<div id="chatWindow">
    <div id="webchat" role="main" style="width: 100%; height: 100%;"></div>
</div>

@section Scripts {
    <script src="https://cdn.botframework.com/botframework-webchat/latest/webchat.js"></script>
    <script>
        const chatIcon = document.getElementById("chatIcon");
        const chatWindow = document.getElementById("chatWindow");

        chatIcon.addEventListener("click", () => {
            if (chatWindow.style.display === "none" || chatWindow.style.display === "") {
                chatWindow.style.display = "block";
            } else {
                chatWindow.style.display = "none";
            }
        });

        // Bot Framework Web Chat Başlatma
        window.WebChat.renderWebChat(
            {
                directLine: window.WebChat.createDirectLine({
                    secret: '@ViewBag.DirectLineSecret'
                }),
                userID: 'user_' + Math.floor(Math.random() * 1000000), // Opsiyonel kullanıcı ID'si
                username: 'Guest'
            },
            document.getElementById('webchat')
        );
    </script>
}
